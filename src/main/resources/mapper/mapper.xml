<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.StudentDao">
    <sql id="key">
        <trim suffixOverrides=",">
            <if test="id!=null">
                id,
            </if>
            <if test="name!=null">
                name,
            </if>
            <if test="age!=null">
                age,
            </if>
            <if test="score!=null">
                score,
            </if>
        </trim>
    </sql>
    <sql id="value">
        <trim suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="name!=null">
                #{name},
            </if>
            <if test="age!=null">
                #{age},
            </if>
            <if test="score!=null">
                #{score},
            </if>
        </trim>
    </sql>

    <insert id="addStudent" parameterType="com.pojo.Student" useGeneratedKeys="true" keyProperty="id">
        insert into stu (<include refid="key"/>) values (<include refid="value"/>)
    </insert>

    <insert id="batchAddStudent" parameterType="com.pojo.Student" useGeneratedKeys="true" keyProperty="id">
        insert into stu (id,name,age,score) values
        <foreach collection="list" separator="," item="student">
            (#{student.id},#{student.name},#{student.age},#{student.score})
        </foreach>
    </insert>

    <update id="updateStudentById">
        update stu set name=#{name},age=#{age},score=#{score} where id = #{id}
    </update>

    <delete id="delStudentById" parameterType="integer">
        delete from stu where id=#{id}
    </delete>

    <delete id="batchDelStudents">
        delete from stu where id in
        <foreach collection="list" open="(" item="lists" separator="," close=")">
            #{lists}
        </foreach>
    </delete>

    <select id="findById" resultType="com.pojo.Student">
        select * from stu where id=#{id}
    </select>

    <select id="finAll" resultType="com.pojo.Student">
        select * from stu;
    </select>

    <select id="findByConditions" resultType="com.pojo.Student">
        select * from stu
        <where>
            <if test="id!=null">
                and id=#{id}
            </if>
            <if test="age!=null">
                and age={age}
            </if>
            <if test="score!=null">
                and score <![CDATA[>]]>#{score}
            </if>
        </where>
    </select>

    <select id="mulitFind" resultMap="mulitFindMap">
        select * from stu where id = #{#id}
    </select>
    <select id="findByLikeName" resultType="com.pojo.Student">
        select * from stu where name like '%' #{name} '%'
    </select>

    <update id="updateByConditions">
        update stu
        <set>
            <if test="name!=null">
                name=#{name},
            </if>
            <if test="age!=null">
                age=#{age},
            </if>
            <if test="score!=null">
                score=#{score},
            </if>
        </set>
        where id=#{id}
    </update>

    <select id="manyToOne" resultMap="manyToOne">
        select * from stu,clas where stu.id = #{id} and clas.c_id=1
    </select>

    <resultMap id="manyToOne" type="com.pojo.StuClass">
        <result column="c_id" property="cid"/>
        <result column="c_name" property="cname"/>
        <association property="student" javaType="com.pojo.Student">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="age" column="age"/>
            <result property="score" column="score"/>
        </association>
    </resultMap>

    <resultMap id="StuClas" type="com.pojo.StuClass">
        <result column="c_id" property="cid"/>
        <result column="c_name" property="cname"/>
    </resultMap>

    <select id="findClass" resultMap="StuClas">
        select * from clas where c_id = #{cid}
    </select>

    <resultMap id="mulitFindMap" type="com.pojo.Student">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
        <result property="score" column="score"/>
        <collection property="subject" ofType="com.pojo.StuClass" select="findClass" column="id">
            <result property="cid" column="c_id"/>
            <result property="cname" column="c_name"/>
        </collection>
    </resultMap>


</mapper>
